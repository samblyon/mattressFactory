{"version":3,"sources":["webpack:///webpack/bootstrap d765254b21ceeb7f2fa9","webpack:///./js/main.js","webpack:///./js/game.js","webpack:///./js/game_view.js","webpack:///./js/map.js","webpack:///./js/coord.js","webpack:///./js/ray.js","webpack:///./js/util.js","webpack:///./js/wall.js","webpack:///./js/player.js","webpack:///./js/monster.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,oDAAmD,MAAM;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD,MAAM;AACzD;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA,8BAA6B,wBAAwB;AACrD,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,sBAAqB;AACrB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,cAAc;AAChC;AACA,QAAO,eAAe;AACtB,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,eAAe;AACjC;AACA,UAAS;AACT;AACA,IAAG;AACH;;AAEA;AACA,UAAS,eAAe;AACxB,UAAS;AACT;;AAEA;;;;;;;ACvMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA;;AAEA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA,gCAA+B;AAC/B;;AAEA;AACA,wDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxLA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4B;AACA;AACA;AACA;;AAEA;;;;;;;AChBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO,QAAQ;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,6CAA4C,kBAAkB;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d765254b21ceeb7f2fa9\n **/","const Game = require('./game.js');\nconst GameView = require('./game_view.js');\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n  console.log(\"Hey there and welcome to Mattress Factory Escape\");\n  document.addEventListener(\"keydown\", hideSplash);\n\n  const canvas = document.getElementById('canvas');\n  canvas.width = window.innerWidth - 20;\n  canvas.height = window.innerHeight - 60;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#222\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n});\n\nlet level = 1;\n\nfunction pass(){\n  const levelSplash = document.getElementById('level-splash');\n  const victoryLine = document.getElementById('level-victory');\n  victoryLine.innerHTML = `YOU HAVE BEATEN LEVEL ${level}`;\n  levelSplash.style.visibility = \"visible\";\n  level += 1;\n  document.addEventListener(\"keydown\", hideSplash);\n}\n\nfunction win(){\n  const winSplash = document.getElementById('win-splash');\n  const victoryLine = document.getElementById('level-victory');\n  victoryLine.innerHTML = `YOU HAVE BEATEN LEVEL ${level}`;\n  winSplash.style.visibility = \"visible\";\n  level = 1;\n  setTimeout( () => {\n    document.addEventListener(\"keydown\", hideSplash)\n  }, 2000);\n}\n\nfunction lose(){\n  const loseSplash = document.getElementById('lose-splash');\n  loseSplash.style.visibility = \"visible\";\n  document.addEventListener(\"keydown\", hideSplash);\n}\n\nfunction hideSplash(){\n  const splashes = document.querySelectorAll('.splash');\n  for (let splash of splashes) {\n    splash.style.visibility = \"hidden\";\n  }\n  window.GameView = new GameView(canvas, pass, lose, win, level);\n  window.GameView.start();\n  document.removeEventListener(\"keydown\", hideSplash);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","class Game {\n  constructor(){\n    // this.grid =\n  }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Map = require('./map');\n\nclass GameView {\n  constructor(canvas, passCallback, losingCallback, winningCallback, level){\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.map = new Map(canvas, level);\n    this.player = this.map.player;\n    this.passCallback = passCallback;\n    this.winningCallback = winningCallback;\n    this.losingCallback = losingCallback;\n    this.level = level;\n  }\n\n  bindKeyHandlers() {\n    window.addEventListener(\"keydown\", (e) => {\n      GameView.KEYS[e.keyCode] = true;\n    });\n\n    window.addEventListener(\"keyup\", (e) => {\n      GameView.KEYS[e.keyCode] = false;\n    });\n\n    window.addEventListener(\"keydown\", (e)=>{\n      if (e.keyCode === 32) { this.player.emitRays(); }\n    });\n  }\n\n  whatKey(){\n    const player = this.player;\n    if (GameView.KEYS[37] && GameView.KEYS[38]) {\n      player.move(\"UL\");\n    } else if (GameView.KEYS[37] && GameView.KEYS[40]){\n      player.move(\"DL\")\n    } else if (GameView.KEYS[39] && GameView.KEYS[38]){\n      player.move(\"UR\");\n    } else if (GameView.KEYS[39] && GameView.KEYS[40]){\n      player.move(\"DR\");\n    } else if (GameView.KEYS[37]) {\n      player.move(\"L\");\n    } else if (GameView.KEYS[39]) {\n      player.move(\"R\");\n    } else if (GameView.KEYS[38]) {\n      player.move(\"U\");\n    } else if (GameView.KEYS[40]) {\n      player.move(\"D\");\n    }\n  }\n\n  playerEscaped(){\n    return this.player.escaped();\n  }\n\n  playerKilled(){\n    //ask map if player collided with monster\n    return this.map.playerKilled();\n  }\n\n  start(){\n    //bind key handlers\n    this.bindKeyHandlers();\n    this.whatKey();\n    //start animation\n    requestAnimationFrame(this.step.bind(this));\n  }\n\n  step () {\n    this.whatKey();\n    this.ctx.fillStyle = \"#222\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.map.step();\n    this.map.draw(this.ctx);\n\n    //request another animation or break if player won / lost\n    if (this.playerEscaped()){\n      if (this.level <= 4) {\n        this.passCallback();\n      } else {\n        debugger;\n        this.winningCallback();\n      }\n    } else if (this.playerKilled()){\n      debugger;\n      this.losingCallback();\n    } else {\n      requestAnimationFrame(this.step.bind(this));\n    }\n  }\n};\n\nGameView.KEYS = {};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game_view.js\n ** module id = 2\n ** module chunks = 0\n **/","const Coord = require('./coord');\nconst Ray = require('./ray');\nconst Util = require('./util');\nconst Wall = require('./wall');\nconst Player = require('./player');\nconst Monster = require('./monster');\n\nclass Map {\n  constructor(canvas, level){\n    window.rays = this.rays = [];\n    this.level = Map.LEVELS[4];  //change back to level variable\n    this.walls = this.level[\"walls\"]\n                  .map(row => {\n                    return row.map((scalar, index) => {\n                      if (index % 2 === 0) {\n                        return scalar * canvas.width;\n                      } else {\n                        return scalar * canvas.height;\n                      }\n                    });\n                  })\n                  .map(info => new Wall(...info));\n    this.player = new Player(\n      this.level.playerStart.x * canvas.width,\n      this.level.playerStart.y * canvas.height,\n      this\n    );\n\n    this.monsters = [];\n    if (this.level.monsters) {\n      window.monsters = this.monsters = this.level.monsters.map( monsterStart => {\n        return new Monster(\n          monsterStart.x * canvas.width,\n          monsterStart.y * canvas.height,\n          this\n        );\n      });\n    }\n    this.canvas = canvas;\n  }\n\n  collidingWithWall(coord){\n    return this.walls.some( wall => {\n      return !(\n        (coord.x < wall.topLeft.x)\n          || (coord.x > wall.bottomRight.x)\n          || (coord.y < wall.topLeft.y)\n          || (coord.y > wall.bottomRight.y)\n      );\n    });\n  }\n\n  inBounds(coord){\n    return !(\n      (coord.x < 0) || (coord.y < 0)\n      || (coord.x > canvas.width) || (coord.y > canvas.height)\n    );\n  }\n\n  cullRays(){\n    this.rays = this.rays.filter(ray => {\n      return ray.age < Ray.LIFESPAN;\n    });\n  }\n\n  moveRays(){\n    for (let ray of this.rays) {\n      ray.move();\n    }\n  }\n\n  moveMonsters(){\n    for (let monster of this.monsters) {\n      monster.move();\n    }\n  }\n\n  playerKilled(){\n    debugger;\n    return this.monsters.some(monster => {\n      return monster.pos.equals(this.player.pos);\n    });\n  }\n\n  step(){\n    this.cullRays();\n    this.moveRays();\n    this.moveMonsters();\n  }\n\n  draw(ctx){\n    this.player.draw(ctx);\n    this.rays.forEach(ray => ray.draw(ctx));\n    this.walls.forEach(wall => wall.draw(ctx)); //remove this on release\n  }\n};\n\n//make relative sizes so can scale\nMap.LEVELS = {\n  1: {\n    walls: [\n              [0, 0, 0.01, 1],\n              [0, 0.35, 0.75, 0.4],\n              [0, 0.6, 0.6, 0.65],\n              [0.7, 0.35, 0.75, 1],\n              [0.55, 0.65, 0.6, 1]\n            ],\n    playerStart: {x: .05, y: .47}\n  },\n  2: {\n    walls: [\n            [0.35, 0, 0.5, 0.05],\n            [0.35, 0, 0.4, 0.3],\n            [0.5, 0, 0.55, 0.3],\n            [0, .25, .35, .3],\n            [.25, .3, .3, .35],\n            [0, .35, .3, .4],\n            [.15, .4, .2, .55],\n            [.2, .5, .3, .55],\n            [.25, .55, .3, .6],\n            [.25, .6, .4, .65],\n            [.35, .65, .4, .7],\n            [.35, .4, .5, .5],\n            [.4, .67, .6, .7],\n            [.55, .25, .6, .3],\n            [.6, .15, .8, .2],\n            [.6, .2, .65, .4],\n            [.5, .4, .65, .45],\n            [.8, .15, .85, .4],\n            [.7, .4, 1, .45],\n            [.78, .45, .8, .5],\n            [.63, .55, .95, .57],\n            [.6, .52, .64, .54],\n            [.99, .45, 1, .5],\n            [.6, .7, .61, 1],\n            [.8, .65, .81, .9],\n            [.61, .99, 1, 1],\n            [.9, .57, .91, 1],\n            [.91, .65, 1, .73]\n    ],\n    playerStart: {x: .45, y: .07}\n  },\n  3: {\n    walls: [\n              [0, 0, 0.01, 1],\n              [0, 0.35, 0.75, 0.4],\n              [0, 0.6, 0.6, 0.65],\n              [0.7, 0.35, 0.75, 1],\n              [0.55, 0.65, 0.6, 1]\n            ],\n    playerStart: {x: .1, y: .47},\n    monsters: [\n      {x: .06, y: .27},\n      {x: .06, y: .87}\n    ]\n  },\n  4: {\n    walls: [\n      [0.35, 0, 0.5, 0.05],\n      [0.35, 0, 0.4, 0.3],\n      [0.5, 0, 0.55, 0.3],\n      [0, .25, .35, .3],\n      [.25, .3, .3, .35],\n      [0, .35, .3, .4],\n      [.15, .4, .2, .55],\n      [.2, .5, .3, .55],\n      [.25, .55, .3, .6],\n      [.25, .6, .4, .65],\n      [.35, .65, .4, .7],\n      [.35, .4, .5, .5],\n      [.4, .67, .6, .7],\n      [.55, .25, .6, .3],\n      [.6, .15, .8, .2],\n      [.6, .2, .65, .4],\n      [.5, .4, .65, .45],\n      [.8, .15, .85, .4],\n      [.7, .4, 1, .45],\n      [.78, .45, .8, .5],\n      [.63, .55, .95, .57],\n      [.6, .52, .64, .54],\n      [.99, .45, 1, .5],\n      [.6, .7, .61, 1],\n      [.8, .65, .81, .9],\n      [.61, .99, 1, 1],\n      [.9, .57, .91, 1],\n      [.91, .65, 1, .73]\n    ],\n    playerStart: {x: .45, y: .07},\n    monsters: [\n        {x: .85, y: .9}\n    ]\n  },\n}\n\n// Map.PLAYER_STARTS = {\n//   1: {x: .05, y: .47},\n//   2: {x: .45, y: .07}\n// }\n\nmodule.exports = Map;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/map.js\n ** module id = 3\n ** module chunks = 0\n **/","class Coord {\n  constructor(x, y){\n    this.x = x;\n    this.y = y;\n  }\n\n  equals(otherCoord){\n    return (this.x === otherCoord.x)\n      && (this.y === otherCoord.y)\n  }\n\n  getAdjacentCoords(){\n    return Coord.MOVES.map(move => {\n      const newX = this.x + move[0];\n      const newY = this.y + move[1];\n      return new Coord(newX, newY);\n    });\n  }\n}\n\nCoord.MOVES = [\n  [0, 1],\n  [0, -1],\n  [1, 0],\n  [-1, 0],\n  [1, 1],\n  [1, -1],\n  [-1, 1],\n  [-1, -1]\n];\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coord.js\n ** module id = 4\n ** module chunks = 0\n **/","const Coord = require('./coord');\n\nclass Ray {\n  constructor(origin, direction, map, age, maxLength){\n    this.body = [origin];  //origin is coord object\n    this.head = origin;\n    this.tail = origin;\n    this.map = map;\n\n    this.direction = direction; //direction is coord object\n    this.speed = Ray.VELOCITY;\n\n    this.age = (age) ? age : Math.random(20);\n    this.maxLength =  Ray.MAX_LENGTH + Math.random(20); //(maxLength) ? maxLength :\n    this.fading = false;\n  }\n\n  move(){\n    // if (this.age < (Ray.LIFESPAN - 60)) {\n      if (this.handleCollisions() === false){\n        this.growHead();\n      }\n    // }\n\n    if (this.body.length > this.maxLength){\n      this.fading = true;\n    }\n\n    if (this.fading) {\n      this.fadeTail()\n    }\n\n    this.age += 1;\n  }\n\n  // move head x and ask map if collided with wall\n  // move head y and ask map if collided with wall\n  // alter this.direction coord to reflect one or both bounces as needed\n  handleCollisions(){\n    const newX = this.head.x + (this.direction.x * this.speed);\n    const xExplorer = new Coord(newX, this.head.y);\n    const xCollision = this.map.collidingWithWall(xExplorer);\n\n    const newY = this.head.y + (this.direction.y * this.speed);\n    const yExplorer = new Coord(this.head.x, newY);\n    const yCollision = this.map.collidingWithWall(yExplorer);\n\n    const zExplorer = new Coord(newX, newY);\n    const zCollision = this.map.collidingWithWall(zExplorer);\n\n    if (xCollision || yCollision || zCollision) {\n      // generate reflected ray\n\n      // reflect direction based on collision\n      const reflectionDirection = new Coord(this.direction.x, this.direction.y);\n      if (xCollision) {\n        reflectionDirection.x = -reflectionDirection.x;\n      } else if (yCollision) {\n        reflectionDirection.y = -reflectionDirection.y;\n      } else {\n        reflectionDirection.y = -reflectionDirection.y;\n        reflectionDirection.x = -reflectionDirection.x;\n      }\n\n      const origin = new Coord(this.head.x, this.head.y);\n      const reflection = new Ray(\n        origin,\n        reflectionDirection,\n        this.map,\n        this.age,        // advance new ray age to parent ray current age\n        this.body.length // set new ray max length\n      );\n\n      reflection.monster = this.monster;\n\n      this.map.rays.push(reflection);\n      console.log(this.map.rays.length);\n\n      // stop expansion of current ray\n      this.direction.x = 0;\n      this.direction.y = 0;\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  growHead(){\n    const newX = this.head.x + (this.direction.x * this.speed);\n    const newY = this.head.y + (this.direction.y * this.speed);\n    this.head = new Coord(newX, newY);\n    this.body.push(this.head); // collision logic could be added before this push\n  }\n\n  fadeTail(){\n    let i = 0;\n    while (i < Ray.VELOCITY) {\n      this.body.shift();\n      i += 1;\n    }\n    this.tail = this.body[0];\n  }\n\n  draw(ctx){\n    if (this.body.length === 0) return;\n\n    ctx.lineWidth = Ray.THICKNESS;\n\n    // linear gradient from start to end of line\n    const grad = ctx.createLinearGradient(\n      this.head.x, this.head.y,\n      this.tail.x, this.tail.y\n    );\n\n    this.colors = (this.monster) ? Ray.MONSTER_COLORS : Ray.COLORS;\n    let headColor = this.colors.HEAD_COLOR;\n\n    if (this.age > Ray.LIFESPAN - 100) {\n      headColor = this.colors.FADING_HEAD_COLOR;\n    }\n\n    if (this.age > Ray.LIFESPAN - 20) {\n      headColor = this.colors.FADED_HEAD_COLOR;\n    }\n\n    grad.addColorStop(0, headColor);\n    grad.addColorStop(1, this.colors.TAIL_COLOR);\n\n    ctx.strokeStyle = grad;\n\n    ctx.beginPath();\n    ctx.moveTo(this.head.x, this.head.y);\n    ctx.lineTo(this.tail.x, this.tail.y);\n\n    ctx.stroke();\n  }\n};\n\nRay.MAX_LENGTH = 60;\nRay.COLORS = {\n  HEAD_COLOR: \"#fff\",\n  FADING_HEAD_COLOR: \"#aaa\",\n  FADED_HEAD_COLOR: \"#7f7f7f\",\n  TAIL_COLOR: \"#222\"\n};\n\nRay.MONSTER_COLORS = {\n  HEAD_COLOR: \"#F00\",\n  FADING_HEAD_COLOR: \"#a55\",\n  FADED_HEAD_COLOR: \"#7f2222\",\n  TAIL_COLOR: \"#222\"\n};\n\nRay.VELOCITY = 2;\nRay.LIFESPAN = 200;\nRay.THICKNESS = 1;\n\nconst rt3oTwo = Math.sqrt(3)/2;\nconst cos15 = Math.cos((15/180) * Math.PI);\nconst sin15 = Math.sin((15/180) * Math.PI);\nRay.DIRECTIONS = [\n  [0, 1],\n  [0, -1],\n  [-1, 0],\n  [1, 0],\n  [1/2, rt3oTwo],\n  [1/2, -rt3oTwo],\n  [-1/2, rt3oTwo],\n  [-1/2, -rt3oTwo],\n  [rt3oTwo, 1/2],\n  [-rt3oTwo, 1/2],\n  [rt3oTwo, -1/2],\n  [-rt3oTwo, -1/2],\n  [cos15,sin15],\n  [-cos15,sin15],\n  [cos15,-sin15],\n  [-cos15,-sin15],\n  [sin15,cos15],\n  [-sin15,cos15],\n  [sin15,-cos15],\n  [-sin15,-cos15],\n];\n\nmodule.exports = Ray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/ray.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = {\n  inherits(Child, Parent) {\n    function Surrogate (){};\n    Surrogate.prototype = Parent.prototype;\n    Child.prototype = new Surrogate();\n    Child.prototype.constructor = Child;\n  },\n\n  // inBounds(coord) {\n  //   return (coord.y >= 0) && (coord.y < this.grid.length)\n  //   && (coord.x >= 0) && (coord.x < this.grid[0].length);\n  // }\n\n  // isWall(coord) {\n  //   return (this.grid[coord.y][coord.x] === \"X\");\n  // }\n\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/util.js\n ** module id = 6\n ** module chunks = 0\n **/","const Coord = require('./coord');\n\nclass Wall {\n  constructor(topX, topY, bottomX, bottomY){\n    this.topLeft = new Coord(topX, topY);\n    this.bottomRight = new Coord(bottomX, bottomY);\n    this.width = bottomX - topX;\n    this.height = bottomY - topY;\n  }\n\n  draw(ctx){\n    ctx.fillStyle = \"#222\"; \n    ctx.fillRect(this.topLeft.x, this.topLeft.y, this.width, this.height);\n  }\n}\n\nmodule.exports = Wall;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/wall.js\n ** module id = 7\n ** module chunks = 0\n **/","const Coord = require('./coord');\nconst Ray = require('./ray');\n\nclass Player {\n  constructor(startX, startY, map){\n    this.pos = new Coord(startX, startY);\n    this.map = map;\n  }\n\n  move(direction){\n    const newX = this.pos.x + (Player.MOVES[direction][0] * Player.SPEED)\n    const newY = this.pos.y + (Player.MOVES[direction][1] * Player.SPEED)\n    const exploreCoord = new Coord(newX, newY);\n    const exploreCoordTopLeft = new Coord(newX - 4, newY - 4);\n    const exploreCoordBottomLeft = new Coord(newX - 4, newY + 4);\n    const exploreCoordTopRight = new Coord(newX + 4, newY - 4);\n    const exploreCoordBottomRight = new Coord(newX + 4, newY + 4);\n\n    if (\n      this.map.collidingWithWall(exploreCoordTopLeft) ||\n      this.map.collidingWithWall(exploreCoordBottomLeft) ||\n      this.map.collidingWithWall(exploreCoordTopRight) ||\n      this.map.collidingWithWall(exploreCoordBottomRight)\n    ) { return; }\n\n    this.pos = exploreCoord;\n    // this.emitRays();\n  }\n\n  emitRays(){\n    const newRays = Ray.DIRECTIONS.map(dir => {\n      let dirVector = new Coord(dir[0], dir[1]);\n      return new Ray(this.pos, dirVector, this.map);\n    });\n    newRays.forEach( ray => {\n      this.map.rays.push(ray);\n    });\n  }\n\n  draw(ctx){\n    ctx.fillStyle = \"#fff\";\n    ctx.fillRect(this.pos.x, this.pos.y, 4, 4);\n  }\n\n  escaped(){\n    return !this.map.inBounds(this.pos);\n  }\n};\n\nconst rt2oTwo = Math.sqrt(2)/2;\n\nPlayer.SPEED = 1.3;\nPlayer.MOVES = {\n  \"U\": [0, -1],\n  \"D\": [0, 1],\n  \"UL\": [-rt2oTwo, -rt2oTwo],\n  \"DL\": [-rt2oTwo, rt2oTwo],\n  \"L\": [-1, 0],\n  \"R\": [1, 0],\n  \"UR\": [rt2oTwo, -rt2oTwo],\n  \"DR\": [rt2oTwo, rt2oTwo]\n}\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/player.js\n ** module id = 8\n ** module chunks = 0\n **/","const Coord = require('./coord');\nconst Ray = require('./ray');\n\nclass Monster {\n  constructor(startX, startY, map){\n    this.pos = new Coord(startX, startY);\n    this.map = map;\n    this.active = false;\n    this.activate();\n  }\n\n  emitRays(){\n    const newRays = Ray.DIRECTIONS.map(dir => {\n      let dirVector = new Coord(dir[0], dir[1]);\n      let ray = new Ray(this.pos, dirVector, this.map);\n      ray.monster = true;\n      return ray;\n    });\n    newRays.forEach( ray => {\n      this.map.rays.push(ray);\n    });\n  }\n\n  currentCourse(){\n    const vector = [\n      this.map.player.pos.x - this.pos.x,\n      this.map.player.pos.y - this.pos.y\n    ];\n\n    const magnitude = Math.sqrt(\n      Math.pow(vector[0], 2) + Math.pow(vector[1], 2)\n    );\n\n    const unitVector = vector.map(coordinate => {\n      return coordinate / magnitude;\n    });\n\n    return new Coord(unitVector[0], unitVector[1]);\n  }\n\n  activate(){\n    this.active = true;\n    this.emitInterval = setInterval( () => { this.emitRays() }, 300);\n  }\n\n  move(){\n    if (this.active) {\n      const dir = this.currentCourse();\n      const newX = this.pos.x + (dir.x * Monster.SPEED)\n      const newY = this.pos.y + (dir.y * Monster.SPEED)\n      let exploreCoord = new Coord(newX, newY);\n\n      if (this.map.collidingWithWall(exploreCoord)) {\n        exploreCoord = new Coord(\n          this.pos.x + (dir.x * Monster.SPEED),\n          this.pos.y\n        )\n        if (this.map.collidingWithWall(exploreCoord)){\n          exploreCoord = new Coord(\n            this.pos.x,\n            this.pos.y + (dir.y * Monster.SPEED)\n          )\n        } if (this.map.collidingWithWall(exploreCoord)) {\n          return;\n        }\n      }\n\n      this.pos = exploreCoord;\n    }\n\n  }\n};\n\nMonster.SPEED = 3;\n\nmodule.exports = Monster;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/monster.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}